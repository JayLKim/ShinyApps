1:10 * 2:11
beta_1 <- sum((x - mean(x)) * (y - mean(y))) / sum((x - mean(x))^2)
beta_1
beta_0 <- mean(y) - beta_1 * mean(x)
beta_0
t_beta_1 <- beta_1 / se_beta_1
t_beta_0 <- beta_0 / se_beta_0
t_beta_1
t_beta_0
pt(0, df = 100)
pt(t_beta_0, df = 98, lower.tail = FALSE)
pt(t_beta_0, df = 98, lower.tail = FALSE) * 2
pt(t_beta_1, df = 98, lower.tail = FALSE) * 2
anova(modfit)
sum(residuals(modfit) ^ 2)
sum(residuals(modfit) ^ 2) / 98
sum(x^2)
sum((x - mean(x))^2)
sum((y - mean(y))^2)
340359 / 84
340459 / 84
rse
var(y)
coef(modift)
coef(modfit)
sum((y - (coef(modfit)[1] + coef(modfit)[2] * x)^2)
sum((y - (coef(modfit)[1] + coef(modfit)[2] * x)^2))
sum((y - (coef(modfit)[1] + coef(modfit)[2] * x))^2)
sum(((coef(modfit)[1] + coef(modfit)[2] * x))^2 - mean(y))
sum((y - mean(y))^2)
sum((y - mean(y))^2) - sum(residuals(modfit) ^ 2) / 98
sum(residuals(modfit) ^ 2) / 98
sum((y - mean(y))^2) - sum(residuals(modfit) ^ 2)
predict(modfit, newdata = x)
?predict
predict(modfit)
pred <- predict(modfit)
plot(pred ~ x)
library(devtools)
install.packages("devtools")
install_github("ramnathv/rCharts@dev")
library(devtools)
install_github("ramnathv/rCharts@dev")
install.packages("base64enc")
install_github("ramnathv/rCharts@dev")
library(shiny)
runExample("06_tabsets")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
library(rCharts)
data(airquality)
dTable(airquality, sPaginationType = "full_numbers")
install.packages(c("boot", "caret", "devtools", "evaluate", "formatR", "highr", "knitr", "manipulate", "markdown", "Matrix", "pgmm", "plyr", "Rcpp", "stringr"))
?runif
?rgamma
?sample
popul <- runif(1000)
sampl <- sample(popul, size = 5, replace = FALSE)
plot(sampl)
popul <- runif(1000)
sample_mean <- numeric()
sample_size <- 5
n <- 1000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size))
}
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
plot(sampl_mean)
plot(sample_mean)
hist(sample_mean)
popul <- rgamma(1000, 2, 2)
hist(popul)
sample_mean <- numeric()
sample_size <- 5
n <- 1000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean)
mean(popul)
mean(sample_mean)
sample_size <-
sample_size <- 3
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean)
mean(popul)
mean(sample_mean)
hist(popul)
popul <- rexp(1000, rate = 1)
hist(popul)
sample_mean <- numeric()
sample_size <- 3
n <- 1000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean)
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean)
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean)
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean)
sample_size <- 30
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean)
sample_size <- 40
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean)
hist(sample_mean, breaks = 30)
hist(sample_mean, breaks = 30)
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
mean(popul)
mean(sample_mean)
sample_size <- 5
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
mean(popul)
mean(sample_mean)
hist(popul)
mean(popul)
mean(sample_mean)
sample_size <- 5
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
popul <- rexp(100000, rate = 1)
hist(popul)
sample_mean <- numeric()
sample_size <- 5
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
mean(popul)
mean(sample_mean)
sample_size <- 40
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
mean(popul)
mean(sample_mean)
popul <- rexp(100000, rate = 10)
hist(popul)
hist(popul, breaks = 30)
hist(popul, breaks = 50)
popul <- rexp(100000, rate = 100)
hist(popul, breaks = 50)
popul <- rexp(100000, rate = 0.1)
hist(popul, breaks = 50)
popul <- rexp(100000, rate = 0.01)
hist(popul, breaks = 50)
hist(popul, breaks = 50)
sample_size <- 40
n <- 1000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
sample_size <- 5
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
mean(popul)
mean(sample_mean)
hist(popul, breaks = 50)
hist(popul, breaks = 100)
hist(popul, breaks = 10000)
hist(sample_mean, breaks = 30)
sample_size <- 1000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
sample_size <- 10000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
mean(popul)
mean(sample_mean)
hist(popul, breaks = 10000)
popul <- rexp(100000, rate = 0.1)
hist(popul, breaks = 10000)
hist(popul, breaks = 100)
sample_size <- 100
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
hist(popul, breaks = 100)
hist(sample_mean, breaks = 30)
n <- 100000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
hist(popul, breaks = 100)
hist(sample_mean, breaks = 100)
mean(popul)
mean(sample_mean)
hist(popul, breaks = 100)
sample_size <- 100
n <- 1000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 100)
hist(sample_mean, breaks = 10)
hist(sample_mean, breaks = 30)
mean(sample_mean)
sample_size <- 10000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
hist(popul, breaks = 100)
hist(sample_mean, breaks = 30)
mean(popul)
mean(sample_mean)
hist(popul, breaks = 100)
popul <- rexp(100000, rate = 1)
hist(popul, breaks = 100)
sample_size <- 100
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
mean(popul)
mean(sample_mean)
n <- 1000
sample_mean <- numeric()
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
popul <- rexp(100000, rate = 0.1)
sample_mean <- numeric()
sample_size <- 100
n <- 1000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
hist(popul, breaks = 100)
mean(popul)
mean(sample_mean)
sample_mean <- numeric()
sample_size <- 5
n <- 1000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
mean(popul)
mean(sample_mean)
sample_mean <- numeric()
sample_size <- 30
n <- 1000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
mean(popul)
mean(sample_mean)
sample_size <- 20
sample_mean <- numeric()
sample_size <- 20
n <- 1000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
mean(popul)
mean(sample_mean)
sample_size <- 10
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
mean(popul)
mean(sample_mean)
sample_size <- 100
n <- 1000
sample_mean <- numeric()
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(popul, sample_size)))
}
hist(sample_mean, breaks = 30)
mean(popul)
mean(sample_mean)
xnorm <- rnorm(10000)
sample_mean <- numeric()
sample_size <- 2
n <- 1000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(xnorm, sample_size)))
}
hist(sample_mean, breaks = 30)
shapiro.test(sample_mean)
qqplot(sample_mean)
?qqplot
qqnorm(sample_mean)
sd(xnorm)
sd(sample_mean)
?sd
?line
x <- seq(-2, 2, length = 100)
hx <- dt(x, df = sample_size - 1)
hist(sample_mean, breaks = 30)
?lines
line(x, hx, type = "l", lty = 2)
lines(x, hx, type = "l", lty = 2)
hx
plot(x, hx)
lines(x, hx, type = "l")
hist(sample_mean, breaks = 30)
lines(x, hx, type = "l")
?hist
hist(sample_mean, breaks = 30, freq = TRUE)
hist(sample_mean, breaks = 30, freq = TRUE)
hist(sample_mean, breaks = 30, freq = FALSE)
lines(x, hx, type = "l")
xnorm <- rnorm(10000)
sample_mean <- numeric()
sample_size <- 10
n <- 1000
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(xnorm, sample_size)))
}
for(i in 1:n) {
sample_mean <- c(sample_mean, mean(sample(xnorm, sample_size)))
}
hist(sample_mean, breaks = 30, freq = FALSE)
x <- seq(-2, 2, length = 100)
hx <- dt(x, df = sample_size - 1)
lines(x, hx, type = "l")
?dt
plot(x, hx, type = "l")
x <- seq(-2, 2, length = 100)
hx <- dt(x, df = (sample_size - 1))
plot(x, hx, type = "l")
hist(sample_mean, breaks = 30, freq = FALSE)
x <- seq(-1, 1, length = 100)
hx <- dt(x, df = (sample_size - 1))
lines(x, hx, type = "l")
hist((sample_mean - 0) * sqrt(sample_size) / sd(sample_mean), breaks = 30, freq = FALSE)
x <- seq(-10, 10, length = 100)
hx <- dt(x, df = (sample_size - 1))
lines(x, hx, type = "l")
hist(sample_mean * sqrt(sample_size) / 1, breaks = 30, freq = FALSE)
x <- seq(-4, 4, length = 100)
hx <- dt(x, df = (sample_size - 1))
lines(x, hx, type = "l")
xnorm <- rnorm(10000)
sample_mean <- numeric()
t_value <- numeric()
sample_size <- 10
n <- 1000
for(i in 1:n) {
temp <- sample(xnorm, sample_size)
sample_mean <- c(sample_mean, mean(temp))
t_value <- c(t_value, mean(temp) * sqrt(sample_size) / sd(temp))
}
hist(t_value, breaks = 30, freq = FALSE)
x <- seq(-4, 4, length = 100)
hx <- dt(x, df = (sample_size - 1))
lines(x, hx, type = "l")
xexp <- rexp(10000, rate = 0.1)
xexp <- rexp(10000, rate = 0.1)
sample_mean <- numeric()
t_value <- numeric()
sample_size <- 10
n <- 1000
for(i in 1:n) {
temp <- sample(xexp, sample_size)
sample_mean <- c(sample_mean, mean(temp))
t_value <- c(t_value, mean(temp) * sqrt(sample_size) / sd(temp))
}
hist(t_value, breaks = 30, freq = FALSE)
mean(xexp)
xexp <- rexp(10000, rate = 0.1)
sample_mean <- numeric()
t_value <- numeric()
sample_size <- 10
n <- 1000
for(i in 1:n) {
temp <- sample(xexp, sample_size)
sample_mean <- c(sample_mean, mean(temp))
t_value <- c(t_value, (mean(temp) - 10) * sqrt(sample_size) / sd(temp))
}
hist(t_value, breaks = 30, freq = FALSE)
x <- seq(-4, 4, length = 100)
hx <- dt(x, df = (sample_size - 1))
lines(x, hx, type = "l")
hist(t_value, breaks = 50, freq = FALSE)
lines(x, hx, type = "l")
xexp <- rexp(10000, rate = 0.1)
sample_mean <- numeric()
t_value <- numeric()
sample_size <- 30
n <- 1000
for(i in 1:n) {
temp <- sample(xexp, sample_size)
sample_mean <- c(sample_mean, mean(temp))
t_value <- c(t_value, (mean(temp) - 10) * sqrt(sample_size) / sd(temp))
}
hist(t_value, breaks = 50, freq = FALSE)
x <- seq(-4, 4, length = 100)
hx <- dt(x, df = (sample_size - 1))
lines(x, hx, type = "l")
sample_size <- 40
n <- 1000
xexp <- rexp(10000, rate = 0.1)
sample_mean <- numeric()
t_value <- numeric()
sample_size <- 40
n <- 1000
for(i in 1:n) {
temp <- sample(xexp, sample_size)
sample_mean <- c(sample_mean, mean(temp))
t_value <- c(t_value, (mean(temp) - 10) * sqrt(sample_size) / sd(temp))
}
hist(t_value, breaks = 50, freq = FALSE)
x <- seq(-4, 4, length = 100)
hx <- dt(x, df = (sample_size - 1))
lines(x, hx, type = "l")
sample_mean <- numeric()
t_value <- numeric()
sample_size <- 100
n <- 1000
for(i in 1:n) {
temp <- sample(xexp, sample_size)
sample_mean <- c(sample_mean, mean(temp))
t_value <- c(t_value, (mean(temp) - 10) * sqrt(sample_size) / sd(temp))
}
hist(t_value, breaks = 50, freq = FALSE)
hist(t_value, breaks = 30, freq = FALSE)
x <- seq(-4, 4, length = 100)
hx <- dt(x, df = (sample_size - 1))
lines(x, hx, type = "l")
sample_size <- 200
n <- 1000
sample_mean <- numeric()
t_value <- numeric()
sample_size <- 200
n <- 1000
for(i in 1:n) {
temp <- sample(xexp, sample_size)
sample_mean <- c(sample_mean, mean(temp))
t_value <- c(t_value, (mean(temp) - 10) * sqrt(sample_size) / sd(temp))
}
hist(t_value, breaks = 30, freq = FALSE)
x <- seq(-4, 4, length = 100)
hx <- dt(x, df = (sample_size - 1))
lines(x, hx, type = "l")
load("~/Documents/CourseraShinyProject/.RData")
setwd("~/Documents/CourseraShinyProject")
library(slidify)
author("Slides")
browseURL("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
install_version("stringr", version="0.6.2")
library(devtools)
install_version("stringr", version="0.6.2")
slidify("index.Rmd")
slidify("index.Rmd")
install_version("stringr", version="0.6.2", type = "source")
slidify("index.Rmd")
install_github('ramnathv/slidify', ref = github_pull(425))
slidify("index.Rmd")
install_version("stringr", version="0.6.2", type = "source")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
?knit2slides
slidify("index.Rmd")
browseURL("index.html")
library(slidify)
slidify("index.Rmd")
browseURL("index.html")
